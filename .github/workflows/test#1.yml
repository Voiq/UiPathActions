name: Run UiPath Test Set via API

on:
  push:
    branches:
      - main

jobs:
  trigger-uipath-test:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq (for JSON parsing)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Trigger digitPass_US Test Set via Orchestrator API
        run: |
          # Step 1: Get Auth Token
          TOKEN_RESPONSE=$(curl -s -X POST "https://account.uipath.com/oauth/token" \
            -H "Content-Type: application/json" \
            -d '{
              "grant_type": "refresh_token",
              "client_id": "'"${{ secrets.UI_ID }}"'",
              "refresh_token": "'"${{ secrets.UI_SECRET }}"'"
            }')

          ACCESS_TOKEN=$(echo "$TOKEN_RESPONSE" | jq -r '.access_token')

          if [ "$ACCESS_TOKEN" = "null" ] || [ -z "$ACCESS_TOKEN" ]; then
            echo "❌ Failed to get access token"
            exit 1
          fi

          # Step 2: Set base URL
          ORG_URL="https://cloud.uipath.com/${{ secrets.UI_ACC }}/${{ secrets.TEN }}"

          # Step 3: Get Test Set ID from default folder (ID: 0)
          TEST_SET_NAME="${{ secrets.UIPATH_TEST_SET_NAME }}"
          TEST_SET_ID=$(curl -s -X GET "$ORG_URL/odata/TestSets?\$filter=Name eq '$TEST_SET_NAME'" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "X-UIPATH-OrganizationUnitId: 0") | jq -r '.value[0].Id'

          if [ "$TEST_SET_ID" = "null" ] || [ -z "$TEST_SET_ID" ]; then
            echo "❌ Test Set '$TEST_SET_NAME' not found in default folder"
            exit 1
          fi

          # Step 4: Start Test Execution
          RESPONSE=$(curl -s -X POST "$ORG_URL/odata/TestSetExecutions/UiPath.Server.Configuration.OData.ExecuteTestSet" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -H "X-UIPATH-OrganizationUnitId: 0" \
            -d "{ \"testSetId\": $TEST_SET_ID }")

          JOB_ID=$(echo "$RESPONSE" | jq -r '.value[0].Id')

          if [ "$JOB_ID" = "null" ] || [ -z "$JOB_ID" ]; then
            echo "❌ Failed to start test execution"
            echo "Response: $RESPONSE"
            exit 1
          fi

          echo "✅ Test set '$TEST_SET_NAME' started successfully (Job ID: $JOB_ID)"
